apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ventiapi
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      initContainers:
      - name: frontend-builder
        image: ventiapi-frontend:latest
        imagePullPolicy: Never  # For local k3d development
        volumeMounts:
        - name: frontend-build
          mountPath: /shared
        command: ["sh", "-c", "cp -r /usr/share/nginx/html/* /shared/"]
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: frontend-build
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: frontend-build
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: ventiapi
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30000
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: ventiapi
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        # Frontend static files
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Proxy API requests to web-api service
        location /api/ {
            proxy_pass http://web-api:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://web-api:8000/health;
        }
    }