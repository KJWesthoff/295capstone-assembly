components:
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
info:
  description: OpenAPI v3 specs for VAmPI
  title: VAmPI
  version: '0.1'
openapi: 3.0.1
paths:
  /:
    get:
      description: VAmPI is a vulnerable on purpose API. It was created in order to
        evaluate the efficiency of third party tools in identifying vulnerabilities
        in APIs but it can also be used in learning/teaching purposes.
      operationId: api_views.main.basic
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  help:
                    example: VAmPI is a vulnerable on purpose API. It was created
                      in order to evaluate the efficiency of third party tools in
                      identifying vulnerabilities in APIs but it can also be used
                      in learning/teaching purposes.
                    type: string
                  message:
                    example: VAmPI the Vulnerable API
                    type: string
                  vulnerable:
                    example: 1
                    type: number
                type: object
          description: Home - Help
      summary: VAmPI home
      tags:
      - home
  /books/v1:
    get:
      description: Retrieves all books
      operationId: api_views.books.get_all_books
      responses:
        '200':
          content:
            application/json:
              example:
                Books:
                - book_title: bookTitle77
                  user: name1
                - book_title: bookTitle85
                  user: name2
                - book_title: bookTitle47
                  user: admin
              schema:
                properties:
                  Books:
                    items:
                      properties:
                        book_title:
                          type: string
                        user:
                          type: string
                      type: object
                    type: array
                type: object
          description: See all books
      summary: Retrieves all books
      tags:
      - books
    post:
      description: Add new book
      operationId: api_views.books.add_new_book
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Add new book with title and secret content only available to
          the user who added it.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Book has been added.
                    type: string
                  status:
                    enum:
                    - success
                    - fail
                    example: success
                    type: string
                type: object
          description: Successfully added a book
        '400':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Book Already exists!
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: Invalid request
        '401':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Invalid token. Please log in again.
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: User not authorized
      summary: Add new book
      tags:
      - books
servers:
- url: ''
