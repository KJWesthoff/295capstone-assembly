components:
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
info:
  description: OpenAPI v3 specs for VAmPI
  title: VAmPI
  version: '0.1'
openapi: 3.0.1
paths:
  /books/v1/{book_title}:
    get:
      description: Retrieves book by title along with secret. Only the owner may retrieve
        it
      operationId: api_views.books.get_by_title
      parameters:
      - in: path
        name: book_title
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    book_title:
                      example: bookTitle77
                      type: string
                    owner:
                      example: name1
                      type: string
                    secret:
                      example: secret for bookTitle77
                      type: string
                  type: object
                type: array
          description: Successfully retrieve book info
        '401':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Invalid token. Please log in again.
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: User not authorized
        '404':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Book not found!
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: Book not found
      summary: Retrieves book by title along with secret
      tags:
      - books
  /createdb:
    get:
      description: Creates and populates the database with dummy data
      operationId: api_views.main.populate_db
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Database populated.
                    type: string
                type: object
          description: Creates and populates the database with dummy data
      summary: Creates and populates the database with dummy data
      tags:
      - db-init
servers:
- url: ''
