components:
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
info:
  description: OpenAPI v3 specs for VAmPI
  title: VAmPI
  version: '0.1'
openapi: 3.0.1
paths:
  /users/v1/register:
    post:
      description: Register new user
      operationId: api_views.users.register_user
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Username of the user
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Successfully registered. Login to receive an auth token.
                    type: string
                  status:
                    enum:
                    - success
                    - fail
                    example: success
                    type: string
                type: object
          description: Successfully created user
        '400':
          content: {}
          description: Invalid request
      summary: Register new user
      tags:
      - users
  /users/v1/{username}:
    delete:
      description: Deletes user by username (Only Admins)
      operationId: api_views.users.delete_user
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: User deleted.
                    type: string
                  status:
                    enum:
                    - success
                    - fail
                    example: success
                    type: string
                type: object
          description: Successfully deleted user
        '401':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Only Admins may delete users!
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: User not authorized
        '404':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: User not found!
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: User not found
      summary: Deletes user by username (Only Admins)
      tags:
      - users
    get:
      description: Displays user by username
      operationId: api_views.users.get_by_username
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  email:
                    example: mail1@mail.com
                    type: string
                  username:
                    example: name1
                    type: string
                type: object
          description: Successfully display user info
        '404':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: User not found
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: User not found
      summary: Retrieves user by username
      tags:
      - users
  /users/v1/{username}/email:
    put:
      description: Update a single users email
      operationId: api_views.users.update_email
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: field to update
        required: true
      responses:
        '204':
          content: {}
          description: Successfully updated user email
        '400':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Please Provide a valid email address.
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: Invalid request
        '401':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Invalid token. Please log in again.
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: User not authorized
      summary: Update users email
      tags:
      - users
  /users/v1/{username}/password:
    put:
      description: Update users password
      operationId: api_views.users.update_password
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: field to update
        required: true
      responses:
        '204':
          content: {}
          description: Successfully updated users password
        '400':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Malformed Data
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: Invalid request
        '401':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Invalid token. Please log in again.
                    type: string
                  status:
                    enum:
                    - fail
                    example: fail
                    type: string
                type: object
          description: User not authorized
      summary: Update users password
      tags:
      - users
servers:
- url: ''
